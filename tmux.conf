# change prefix C-b -> C-a
unbind C-b
set -g prefix C-a

# prefix can be sent to sub-tmux via "C-a C-a" or "C-b"
bind-key -n C-b send-prefix
bind C-a send-prefix

unbind C-w
bind C-w select-pane -t :.+

# Rebinding the pane splitting bindings  | and -
bind C-v split-window -h
bind C-s split-window -v

bind t new-window

bind -n C-Right next-window
bind -n C-Left previous-window

# Navegar entre paneles de Vim y Tmux con C-[h/j/k/l]
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# force reload of the config file
bind r source-file ~/.tmux.conf


#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour228 #yellow
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green




# scroll and resize panes with the mouse, click on panes to select them
set -g mouse on

# Toggle mouse on with ^B m
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'

set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'

# Maximizes pane for easy text copy in term mode
unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom

# Restores maximized pane
unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom



# Saves current buffer into a file and Vim it.
# From bash can also be called with the ':w' alias that exists in bashrc,
# but when in other programs c-A P must be used.
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer ; new-window "vim %1" '




# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'sainnhe/tmux-fzf'

set -g @resurrect-strategy-nvim 'session'
set -g @plugin 'dracula/tmux'
set -g @plugin 'laktak/extrakto'


set -g @dracula-show-battery false
set -g @dracula-show-network false
set -g @dracula-show-weather false
set -g @dracula-show-powerline true
#####


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'



# Rebinding the pane splitting bindings  | and -
bind C-v split-window -h
bind C-s split-window -v
